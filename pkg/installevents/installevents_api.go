// Code generated by tutone: DO NOT EDIT
package installevents

import "context"

func (a *Installevents) CreateInstallEvent(
	input InstallStatus,
) (*InstallEvent, error) {
	return a.CreateInstallEventWithContext(context.Background(),
		input,
	)
}

func (a *Installevents) CreateInstallEventWithContext(
	ctx context.Context,
	input InstallStatus,
) (*InstallEvent, error) {

	resp := CreateInstallEventQueryResponse{}
	vars := map[string]interface{}{
		"input": input,
	}

	if err := a.client.NerdGraphQueryWithContext(ctx, CreateInstallEventMutation, vars, &resp); err != nil {
		return nil, err
	}

	return &resp.InstallEvent, nil
}

type CreateInstallEventQueryResponse struct {
	InstallEvent InstallEvent `json:"CreateInstallEvent"`
}

const CreateInstallEventMutation = `mutation(
	$input: InstallStatus!,
) { createInstallEvent(
	input: $input,
) {
	cliVersion
	complete
	displayName
	entityGuid
	error {
		details
		message
	}
	hostName
	kernelArch
	kernelVersion
	logFilePath
	name
	os
	platform
	platformFamily
	platformVersion
	redirectUrl
	status
	targetedInstall
	timestamp
	validationDurationMilliseconds
} }`
